<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 公共 -->
<mapper namespace="common">

    <!-- 删除 -->
    <!-- 
    <update id="executeUpdate" parameterType="string">
   		${sql}
    </update>
     -->
     <update id="executeUpdate">
   		update ${tableName} set
   		<foreach collection="updateValue.keys" item="k" separator=","> 
	    	<if test="null != updateValue[k]">  
                    ${k} = #{updateValue[${k}]}
        	</if>
		</foreach> 
		<if test="null != condition">  
			<where>
				<foreach collection="condition.keys" item="k" separator="and"> 
			    	<if test="null != condition[k]">  
		                    ${k} = #{condition[${k}]}  
		        	</if>
				</foreach> 
			</where>
		</if>
    </update>
     
    <!-- 删除 -->
    <delete id="executeDelete" parameterType="string">
    	delete from ${tableName} 
    	<trim prefix="where">
    		<include refid="common.propertiesCondition"/>
    	</trim>
    </delete>
    
    <!-- 根据ID批量删除 -->
    <delete id="executeBatchDeleteByIds">
    	delete from ${tableName}
    	<if test="ids != null and ids.length > 0">
    		where id in
	    	<foreach collection="ids" index="index" item="item" open="(" separator="," close=")"> 
		       	#{item} 
		    </foreach> 
	    </if>
    </delete>
    
    <!-- 过滤条件 -->
    <sql id="propertiesCondition">
    	<if test="filters != null and filters.size > 0">
        	<foreach collection="filters" item="filter" separator="and">
				<choose>
					<when test="filter.compareType.value == 'eq'">
						${filter.propertyName} = #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'ne'">
						${filter.propertyName} != #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'gt'">
						${filter.propertyName} > #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'ge'">
						${filter.propertyName} >= #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'lt'">
						<![CDATA[ ${filter.propertyName} < #{filter.propertyValue} ]]>
					</when>
					<when test="filter.compareType.value == 'le'">
						<![CDATA[ ${filter.propertyName} <= #{filter.propertyValue} ]]>
					</when>
					<when test="filter.compareType.value == 'like'">
						${filter.propertyName} like '%${filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'llike'">
						${filter.propertyName} like '${filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'rlike'">
						${filter.propertyName} like '%${filter.propertyValue}'
					</when>
					<when test="filter.compareType.value == 'nlike'">
						${filter.propertyName} not like '${filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'nllike'">
						${filter.propertyName} not like '${filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'nrlike'">
						${filter.propertyName} not like '%${filter.propertyValue}'
					</when>
					<when test="filter.compareType.value == 'nnull'">
						${filter.propertyName} is not null
					</when>
					<when test="filter.compareType.value == 'null'">
						${filter.propertyName} is null
					</when>
					<otherwise>
						${filter.propertyName} = #{filter.propertyValue}
					</otherwise>
				</choose>
			</foreach>
		</if>
    </sql>
    
    <!-- 排序 -->
    <sql id="sortCondition">
    	<if test="sorts != null and sorts.size > 0">
	    	order by
	        <foreach collection="sorts" item="sort" separator=",">
					${sort.propertyName} ${sort.sortType}
			</foreach>
		</if>
    </sql>
    
    <!-- 分页 -->
    <sql id="pageCondition">
    	<trim prefix="limit" prefixOverrides=",">  
            <if test="pageFirst != null">#{pageFirst}</if>  
            <if test="pageSize != null">,#{pageSize}</if>  
    	</trim> 
    </sql>
     
     <select id="count" resultType="java.lang.Integer">
     	select count(*) from ${tableName}
     	<trim prefix="where">
    		<include refid="common.propertiesCondition"/>
    	</trim>
     </select>
</mapper>