<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lmiky.jdp.module.pojo.Module">
	<resultMap type="Module" id="module">
		<id column="id" property="id"/>
		<id column="name" property="name"/>
		<id column="path" property="path"/>
		<!-- 
		<association property="group" column="group_id" select="com.lmiky.jdp.module.pojo.ModuleGroup.findById"/>
		 -->
		 <!-- 
		 <association property="group" column="group_id" resultMap="com.lmiky.jdp.module.pojo.ModuleGroup.moduleGroup"/>
		 -->
	</resultMap>
	<sql id="tableName">
		t_module
	</sql>
	<select id="findById" resultMap="module">
		select * from 
		<include refid="tableName"/>	
		where id = #{id}
	</select>
	
	<select id="findByGroupId" resultMap="module">
		select * from 
		<include refid="tableName"/>	
		where group_id = #{groupId}
	</select>
	
	<select id="find" resultMap="module">
		select * from 
		<include refid="tableName"/>
		<where>
			<foreach collection="filters" item="filter" separator="and">
				<choose>
					<when test="filter.compareType.value == 'eq'">
						${filter.propertyName} = #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'ne'">
						${filter.propertyName} != #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'gt'">
						${filter.propertyName} > #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'ge'">
						${filter.propertyName} >= #{filter.propertyValue}
					</when>
					<when test="filter.compareType.value == 'lt'">
						<![CDATA[ ${filter.propertyName} < #{filter.propertyValue} ]]>
					</when>
					<when test="filter.compareType.value == 'le'">
						<![CDATA[ ${filter.propertyName} <= #{filter.propertyValue} ]]>
					</when>
					<when test="filter.compareType.value == 'like'">
						${filter.propertyName} like '%#{filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'llike'">
						${filter.propertyName} like '%#{filter.propertyValue}'
					</when>
					<when test="filter.compareType.value == 'rlike'">
						${filter.propertyName} like '#{filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'nlike'">
						${filter.propertyName} not like '%#{filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'nllike'">
						${filter.propertyName} not like '%#{filter.propertyValue}'
					</when>
					<when test="filter.compareType.value == 'nrlike'">
						${filter.propertyName} not like '#{filter.propertyValue}%'
					</when>
					<when test="filter.compareType.value == 'nnull'">
						${filter.propertyName} is not null
					</when>
					<when test="filter.compareType.value == 'null'">
						${filter.propertyName} is null
					</when>
					<otherwise>
						${filter.propertyName} = #{filter.propertyValue}
					</otherwise>
				</choose>
			</foreach>
		</where>
	</select>
	
	 <!-- 
	 <select id="find" resultMap="module">
		select m.*, g.id modulegroup_id, g.name modulegroup_name, g.path modulegroup_path from 
		<include refid="tableName"/> m  join <include refid="com.lmiky.jdp.module.pojo.ModuleGroup.tableName"/> g on m.group_id = g.id
		where m.id = #{id}
	</select>
	 -->
</mapper>